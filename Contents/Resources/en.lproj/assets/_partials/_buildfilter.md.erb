<%= md_links %>
<%= md_images %>

In this step, you’ll need to have [downloaded balthisarfiles.sit][1], and then
unstuffed it in a location that’s known and accessible to you. You’ll be using
it very shortly, below.
{: .note .callout}

The next thing we need to do is put our filter files where the print system
expects to find them. [Start a terminal][startterminal], [<samp>su</samp> to
<samp>root</samp>][becomeroot], and type these:


mkdir –p /usr/local/lib/lpd
 : creates the directory we need.

cd /usr/local/lib/lpd
 : puts you in the OS’ lpd directory.

cp <em>…path…</em>/lpd.filter lpd.filter
 : copies the <samp>lpd.filter</samp> file.

cp <em>…path…</em>/GhostScript.ppd GhostScript.ppd
 : copies the <samp>GhostScript.ppd</samp> file.

cp <em>…path…</em>/endofjob endofjob
 : copies the <samp>endofjob</samp> file.

cd ..<kbd>
 : backs up one directory level.

chown -R root.daemon lpd
 : sets the proper permissions for this directory.

mkdir –p /usr/local/lib/lpd
 : creates the directory we need.

cd /usr/local/lib/lpd
 : puts you in the OS’ lpd directory.

cp <em>…path…</em>/lpd.filter lpd.filter
 : copies the <samp>lpd.filter</samp> file.

cp <em>…path…</em>/GhostScript.ppd GhostScript.ppd
 : copies the <samp>GhostScript.ppd</samp> file.

cp <em>…path…</em>/endofjob endofjob
 : copies the <samp>endofjob</samp> file.

cd ..<kbd>
 : backs up one directory level.

chown -R root.daemon lpd
 : sets the proper permissions for this directory.
{: .width50 .codeAndDescription }

You need to know the path to the files you’re copying above. For example, had
I unstuffed the file in the “Downloads” folder in my own home directory, then
the <samp><em>…path…</em></samp> portion of the <samp>cp</samp> command I
would use would be <samp>~jderry/Downloads/balthisarfiles/Filter</samp>.
{: .tip .callout}

Now that the files are in place, we need to edit the file to make it useful.
Type:

cd lpd
 : go back to the lpd directory, since we had just backed out of it.

pico lpd.filter
 : opens lpd.filter file in pico.
{: .width50 .codeAndDescription }

Great, you should now be in the [pico editor][pico_tutorial] looking at the
<samp>lpd.filter</samp> file. The actual file you’ll see has a lot more
information in it, buried in comments, but these have been left out below for
conciseness. Please read through the whole file for some added ideas.

~~~ bash
#!/bin/sh
#--------------------------------------------------------------------
# Setup our local variables - note: if you have another version
# of GhostScript, these paths MAY be different. For example,
# the fink package manager installs into /sw instead of /usr/local.
# If you're using another distribution of SAMBA for SMB printing,
# note the SMBPATH may be different on your machine, too!
#--------------------------------------------------------------------
GS=/usr/local/bin/gs
GS_FONTPATH=/usr/local/share/ghostscript/fonts:/usr/local/share/ghostscript/6.50/lib
SMBPATH=/usr/local/samba/bin/smbclient
export GS GS_FONTPATH SMBPATH

#--------------------------------------------------------------------
# NON-APPLETALK Printers: remove the comment from the line below:
#--------------------------------------------------------------------
#$GS -dNOPAUSE -q -dBATCH -sDEVICE=cdj550 -r600 -sOutputFile=\|"/usr/bin/lpr -v -h -Plp" -

#--------------------------------------------------------------------
# APPLETALK Printers: remove the comment from the line below:
#--------------------------------------------------------------------
#$GS -dNOPAUSE -q -dBATCH -sDEVICE=cdj550 -r600 -sOutputFile=\|"/usr/bin/atprint deskjet970:DeskWriter" -

#--------------------------------------------------------------------
# SAMBA Printers: remove the comment from the line below:
#--------------------------------------------------------------------
#$GS -dNOPAUSE -q -dBATCH -sDEVICE=cdj550 -r600 -sOutputFile=- - | $SMBPATH '\\WINBOX\windeskjet' -P -N -c 'print -'
~~~


If you installed your own version of GhostScript, make sure the
<samp>GS</samp> and the <samp>GS_FONTPATH</samp> lines contain the correct
directory paths. If you installed my recommended distribution, then you’re
already okay.
{: .note .callout}

If you installed your own version of SAMBA, make sure the <samp>SMBPATH</samp>
line contains the correct directory path. If you installed my recommended
distribution, then you’re already okay. And of course, if you’re not printing
to an SMB device, don’t worry about it.
{: .note .callout}

Let us concentrate on the last three “major sections” of the file. The filter
as-is will do nothing until we remove one of the comment symbols. Depending on
your printing method, do one of the following:

- *TCP/IP using the LPD system*:
  - Remove the comment symbol from the <samp>$GS</samp> line in the
    <samp>NON–APPLETALK</samp> section.
- *AppleTalk*:
  - Remove the comment from the <samp>$GS</samp> line in the 
    <samp>APPLETALK</samp> section.
  - Replace <samp>deskjet970:DeskWriter</samp> with the AppleTalk  name and 
    type pair that you learned in the [An Interesting Experiment][experiment] 
    section of this guide.
  - If your printer name or type has a space in it, see note below.
- *SMB via SAMBA*:
  - Remove the comment from the <samp>$GS</samp> line in the
    <samp>SAMBA</samp> section.
  - Replace <samp>\\WINBOX\windeskjet</samp> with:
    - the name of the Windows computer hosting the printer in place of
      <samp>WINBOX</samp>.
    - the name of the printer as shared by the Windows computer in place of
      <samp>windeskjet</samp>.
  - If your SMB printer requires special access, such as a different Workgroup
    or the use of user name and password, see note below.


When you’re done making the necessary changes, type <samp>Ctrl-O</samp>, hit
<samp>Return</samp>, and type <samp>Ctrl-X</samp> to exit from pico.

<div class='note callout' markdown='1'>
*AppleTalk Note*: remember your printer name from [An Interesting
Experiment][experiment], above? If your printer name has a space in it, you’ll
have to nest the quotes. For example, if your printer is called <samp>deskjet
970</samp> instead of <samp>deskjet970</samp>, you’ll have to write the
printer name/type like this, for example:

<code>'deskjet 970':DeskWriter</code>

Your complete <samp>–sOutputFile=</samp> parameter will look something like
this with nested quotes:

<code>\|"/usr/bin/atprint 'deskjet970':DeskWriter"</code>
</div>

<div class='note callout' markdown='1'>
_SMB Note:_ SAMBA is able to support Windows’ Workgroups as well as
user-authentification. If you require this type of access, please consult
<samp>man smbclient</samp> from the terminal or from the [internet][2].
</div>

Don’t forget the single hyphen at the end of the line. It’s not shown in this
example, because it’s a parameter of its own, but easy to overlook. It’s
located on the <samp>$GS</samp> line where we would <em>normally</em> supply a
file name for GhostScript processing. But when Mac OS X passes in the
Postscript file it generates, it can have any old name and could potentially
be anywhere on the hard drive. Use of the hyphen is a standard Unix convention
to represent the name and path of whatever file is passed in – in this case,
the Postscript file generated by Mac OS X.
{: .note .callout}


 [1]: https://www.balthisar.com/files/balthisarfiles.sit
 [2]: href="http://us1.samba.org/samba/docs/man/smbclient.1.html
